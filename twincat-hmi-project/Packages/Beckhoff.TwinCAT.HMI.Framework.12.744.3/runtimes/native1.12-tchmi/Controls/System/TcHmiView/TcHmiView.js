var TcHmi;!function(TcHmi){let Controls;!function(Controls){let System;!function(System){class TcHmiView extends TcHmi.Controls.System.TcHmiPartial{constructor(element,pcElement,attrs){super(element,pcElement,attrs)}__processAccessConfig(){super.__processAccessConfig();const currentAccess=TcHmi.Access.checkAccess(this,"observe");if(null===currentAccess);else if(!1===currentAccess){if(TcHmi.Server.getWebsocketReadyState()===WebSocket.OPEN){let userMessage="Access to "+this.__id+" not allowed";const loggedInUser=TcHmi.System.Services.accessManager.getCurrentUserConfig();4===loggedInUser.state&&(userMessage+=' for user <span style="cursor:help;border-bottom:lightgray dotted 2px;" title="Group membership: '+loggedInUser.userIsInGroups.join(", ")+"\nAuthorized by "+loggedInUser.domain+" in Session:\n"+loggedInUser.session+'">'+loggedInUser.name+"</span>"),userMessage+='.\n<input type="submit" value="Logout" style="padding:10px;" onclick="window.location = \'/Logout?Location='+window.location.pathname+"'\">",TcHmi.DialogManager.updateText("__TcHmiViewAccess",userMessage,TcHmi.DialogManager.DialogSeverity.Error),TcHmi.DialogManager.showDialog("__TcHmiViewAccess",!0,TcHmi.DialogManager.DialogType.Overlay)}}else!0===currentAccess&&"__TcHmiViewAccess"===TcHmi.DialogManager.getDialogOwner()&&TcHmi.DialogManager.showDialog("__TcHmiViewAccess",!1)}}System.TcHmiView=TcHmiView}(System=Controls.System||(Controls.System={}))}(Controls=TcHmi.Controls||(TcHmi.Controls={}))}(TcHmi||(TcHmi={})),TcHmi.Controls.registerEx("TcHmiView","TcHmi.Controls.System",TcHmi.Controls.System.TcHmiView);